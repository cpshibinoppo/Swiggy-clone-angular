{"ast":null,"code":"import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i2 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i1$2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token for the MatInkBar's Positioner. */\n\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\n\nconst _c1 = function (a0) {\n  return {\n    animationDuration: a0\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nconst _c3 = [\"tabListContainer\"];\nconst _c4 = [\"tabList\"];\nconst _c5 = [\"tabListInner\"];\nconst _c6 = [\"nextPaginator\"];\nconst _c7 = [\"previousPaginator\"];\nconst _c8 = [\"tabBodyWrapper\"];\nconst _c9 = [\"tabHeader\"];\n\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const tab_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(1);\n\n      return i0.ɵɵresetView(ctx_r12._handleClick(tab_r4, _r0, i_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r5 = restoredCtx.index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14._tabFocusChanged($event, i_r5));\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    i0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n\n    const _r7 = i0.ɵɵreference(4);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex === i_r5);\n    i0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"ngClass\", tab_r4.labelClass)(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex === i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel)(\"ngIfElse\", _r7);\n  }\n}\n\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 11);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19._setTabBodyWrapperHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r16);\n    i0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r16))(\"ngClass\", tab_r15.bodyClass)(\"content\", tab_r15.content)(\"position\", tab_r15.position)(\"origin\", tab_r15.origin)(\"animationDuration\", ctx_r3.animationDuration)(\"preserveContent\", ctx_r3.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r16 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r16));\n  }\n}\n\nconst _c10 = [\"mat-tab-nav-bar\", \"\"];\n\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\n\n\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n\n\nclass MatInkBar {\n  constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n    this._animationMode = _animationMode;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n\n\n  alignToElement(element) {\n    this.show();\n\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      const positions = this._inkBarPositioner(element);\n\n      const inkBar = this._elementRef.nativeElement;\n      inkBar.style.left = positions.left;\n      inkBar.style.width = positions.width;\n    });\n  }\n  /** Shows the ink bar. */\n\n\n  show() {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n  /** Hides the ink bar. */\n\n\n  hide() {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n}\n\nMatInkBar.ɵfac = function MatInkBar_Factory(t) {\n  return new (t || MatInkBar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatInkBar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatInkBar,\n  selectors: [[\"mat-ink-bar\"]],\n  hostAttrs: [1, \"mat-ink-bar\"],\n  hostVars: 2,\n  hostBindings: function MatInkBar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInkBar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-ink-bar',\n      host: {\n        'class': 'mat-ink-bar',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_MAT_INK_BAR_POSITIONER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\n\nclass MatTabContent {\n  constructor(\n  /** Content for the tab. */\n  template) {\n    this.template = template;\n  }\n\n}\n\nMatTabContent.ɵfac = function MatTabContent_Factory(t) {\n  return new (t || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nMatTabContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabContent,\n  selectors: [[\"\", \"matTabContent\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_CONTENT,\n    useExisting: MatTabContent\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]',\n      providers: [{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\n\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\n\nclass MatTabLabel extends CdkPortal {\n  constructor(templateRef, viewContainerRef, _closestTab) {\n    super(templateRef, viewContainerRef);\n    this._closestTab = _closestTab;\n  }\n\n}\n\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) {\n  return new (t || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n};\n\nMatTabLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabel,\n  selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_LABEL,\n    useExisting: MatTabLabel\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]',\n      providers: [{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n\n/** @docs-private */\n\n\nconst _MatTabBase = mixinDisabled(class {});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\n\n\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\n\nclass MatTab extends _MatTabBase {\n  constructor(_viewContainerRef, _closestTabGroup) {\n    super();\n    this._viewContainerRef = _viewContainerRef;\n    this._closestTabGroup = _closestTabGroup;\n    /** Plain text label for the tab, used when there is no template label. */\n\n    this.textLabel = '';\n    /** Portal that will be the hosted content of the tab */\n\n    this._contentPortal = null;\n    /** Emits whenever the internal state of the tab changes. */\n\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n\n    this.isActive = false;\n  }\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n\n\n  get templateLabel() {\n    return this._templateLabel;\n  }\n\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  /** @docs-private */\n\n\n  get content() {\n    return this._contentPortal;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n\n\n  _setTemplateLabelInput(value) {\n    // Only update the label if the query managed to find one. This works around an issue where a\n    // user may have manually set `templateLabel` during creation mode, which would then get\n    // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n    // tab matches the current one so that we don't pick up labels from nested tabs.\n    if (value && value._closestTab === this) {\n      this._templateLabel = value;\n    }\n  }\n\n}\n\nMatTab.ɵfac = function MatTab_Factory(t) {\n  return new (t || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n};\n\nMatTab.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTab,\n  selectors: [[\"mat-tab\"]],\n  contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    }\n  },\n  viewQuery: function MatTab_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TemplateRef, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    textLabel: [\"label\", \"textLabel\"],\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    labelClass: \"labelClass\",\n    bodyClass: \"bodyClass\"\n  },\n  exportAs: [\"matTab\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB,\n    useExisting: MatTab\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTab_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      inputs: ['disabled'],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab',\n      providers: [{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }],\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB_GROUP]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    templateLabel: [{\n      type: ContentChild,\n      args: [MAT_TAB_LABEL]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MAT_TAB_CONTENT, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    labelClass: [{\n      type: Input\n    }],\n    bodyClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\n\n\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [// Transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })), // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px',\n    // Normally this is redundant since we detach the content from the DOM, but if the user\n    // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n    visibility: 'hidden'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px',\n    visibility: 'hidden'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)',\n    visibility: 'hidden'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)',\n    visibility: 'hidden'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n    this._host = _host;\n    /** Subscription to events for when the tab body begins centering. */\n\n    this._centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      if (!this._host.preserveContent) {\n        this.detach();\n      }\n    });\n  }\n  /** Clean up centering subscription. */\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._centeringSub.unsubscribe();\n\n    this._leavingSub.unsubscribe();\n  }\n\n}\n\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n  return new (t || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatTabBodyPortal.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabBodyPortal,\n  selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: MatTabBody,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatTabBody)]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n\n\nclass _MatTabBodyBase {\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /** Subscription to the directionality change observable. */\n\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Emits when an animation on the tab is complete. */\n\n    this._translateTabComplete = new Subject();\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n\n    this._onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n\n    this._beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n\n    this._afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n\n    this._onCentered = new EventEmitter(true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n\n    /** Duration for the tab's animation. */\n\n    this.animationDuration = '500ms';\n    /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n\n    this.preserveContent = false;\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n\n        changeDetectorRef.markForCheck();\n      });\n    } // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n\n\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n\n\n  set position(position) {\n    this._positionIndex = position;\n\n    this._computePositionAnimationState();\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n\n\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event) {\n    const isCentering = this._isCenterPosition(event.toState);\n\n    this._beforeCentering.emit(isCentering);\n\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** The text direction of the containing app. */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n\n\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n\n\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n\n\n  _computePositionFromOrigin(origin) {\n    const dir = this._getLayoutDirection();\n\n    if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n\n}\n\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {\n  return new (t || _MatTabBodyBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\n_MatTabBodyBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabBodyBase,\n  inputs: {\n    _content: [\"content\", \"_content\"],\n    origin: \"origin\",\n    animationDuration: \"animationDuration\",\n    preserveContent: \"preserveContent\",\n    position: \"position\"\n  },\n  outputs: {\n    _onCentering: \"_onCentering\",\n    _beforeCentering: \"_beforeCentering\",\n    _afterLeavingCenter: \"_afterLeavingCenter\",\n    _onCentered: \"_onCentered\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabBodyBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    preserveContent: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n\n\nclass MatTabBody extends _MatTabBodyBase {\n  constructor(elementRef, dir, changeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n\n}\n\nMatTabBody.ɵfac = function MatTabBody_Factory(t) {\n  return new (t || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMatTabBody.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabBody,\n  selectors: [[\"mat-tab-body\"]],\n  viewQuery: function MatTabBody_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-body\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n  template: function MatTabBody_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n        return ctx._onTranslateTabStarted($event);\n      })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n        return ctx._translateTabComplete.next($event);\n      });\n      i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c2, ctx._position, i0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    }\n  },\n  dependencies: [MatTabBodyPortal],\n  styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matTabsAnimations.translateTab]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-tab-body'\n      },\n      template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _portalHost: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to provide the default options the tabs module. */\n\n\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n\n/** @docs-private */\n\nconst _MatTabLabelWrapperBase = mixinDisabled(class {});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n\n\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n  }\n  /** Sets focus on the wrapper element */\n\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n}\n\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n  return new (t || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nMatTabLabelWrapper.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabelWrapper,\n  selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n  hostVars: 3,\n  hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      inputs: ['disabled'],\n      host: {\n        '[class.mat-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Config used to bind passive event listeners */\n\n\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\n\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\n\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\n\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n\nclass MatPaginatedTabHeader {\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n\n    this._scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n\n    this._selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n\n    this._showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n\n    this._disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n\n    this._disableScrollBefore = true;\n    /** Stream that will stop the automated scrolling. */\n\n    this._stopScrolling = new Subject();\n    this._disablePagination = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n\n    this.selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n\n    this.indexFocused = new EventEmitter(); // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    });\n  }\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n\n\n  get disablePagination() {\n    return this._disablePagination;\n  }\n\n  set disablePagination(value) {\n    this._disablePagination = coerceBooleanProperty(value);\n  }\n  /** The index of the active tab. */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n\n    const resize = this._viewportRuler.change(150);\n\n    const realign = () => {\n      this.updatePagination();\n\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();\n\n    this._keyManager.updateActiveItem(this._selectedIndex); // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n    // can hold up tests that are in a background tab.\n\n\n    this._ngZone.onStable.pipe(take(1)).subscribe(realign); // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n\n\n    merge(dirChange, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => {\n        Promise.resolve().then(() => {\n          // Clamp the scroll distance, because it can change with the number of tabs.\n          this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n          realign();\n        });\n      });\n\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    }); // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /** Sends any changes that could affect the layout of the items. */\n\n\n  _itemsResized() {\n    if (typeof ResizeObserver !== 'function') {\n      return EMPTY;\n    }\n\n    return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n      const resizeObserver = new ResizeObserver(() => {\n        observer.next();\n      });\n      tabItems.forEach(item => {\n        resizeObserver.observe(item.elementRef.nativeElement);\n      });\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }))), // Skip the first emit since the resize observer emits when an item\n    // is observed for new items when the tab is already inserted\n    skip(1));\n  }\n\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n\n\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n\n      this._checkScrollingControls();\n\n      this._alignInkBarToSelectedTab();\n\n      this._selectedIndexChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n\n\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n\n      this._scrollDistanceChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n\n\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n\n          this._itemSelected(event);\n        }\n\n        break;\n\n      default:\n        this._keyManager.onKeydown(event);\n\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n\n\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || ''; // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n\n      this._ngZone.run(() => {\n        this.updatePagination();\n\n        this._alignInkBarToSelectedTab();\n\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n\n\n  updatePagination() {\n    this._checkPaginationEnabled();\n\n    this._checkScrollingControls();\n\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n\n\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n\n\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n\n\n  _isValidIndex(index) {\n    if (!this._items) {\n      return true;\n    }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n\n\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n\n\n      const containerEl = this._tabListContainer.nativeElement;\n\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n\n\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`; // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n\n\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.\n\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n\n\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    } // The view length is the visible width of the tab labels.\n\n\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._showPaginationControls = isEnabled;\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n\n\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n\n\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n\n\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    } // Avoid overlapping timers.\n\n\n    this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.\n\n\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction); // Stop the timer if we've reached the start or the end.\n\n\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n\n\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n\n    const maxScrollDistance = this._getMaxScrollDistance();\n\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n\n    this._scrollDistanceChanged = true;\n\n    this._checkScrollingControls();\n\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n\n}\n\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n  return new (t || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPaginatedTabHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatPaginatedTabHeader,\n  inputs: {\n    disablePagination: \"disablePagination\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disablePagination: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n\n\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n  }\n  /** Whether the ripple effect is disabled or not. */\n\n\n  get disableRipple() {\n    return this._disableRipple;\n  }\n\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n\n}\n\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {\n  return new (t || _MatTabHeaderBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabHeaderBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabHeaderBase,\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n\n\nclass MatTabHeader extends _MatTabHeaderBase {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n}\n\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n  return new (t || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabHeader.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabHeader,\n  selectors: [[\"mat-tab-header\"]],\n  contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabHeader_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-header\"],\n  hostVars: 4,\n  hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    }\n  },\n  inputs: {\n    selectedIndex: \"selectedIndex\"\n  },\n  outputs: {\n    selectFocusedIndex: \"selectFocusedIndex\",\n    indexFocused: \"indexFocused\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 10,\n  consts: [[\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"tabListInner\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabHeader_Template_button_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabHeader_Template_button_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabHeader_Template_button_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7, 8);\n      i0.ɵɵprojection(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"mat-ink-bar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 9, 10);\n      i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_button_mousedown_11_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabHeader_Template_button_click_11_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabHeader_Template_button_touchend_11_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(13, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n    }\n  },\n  dependencies: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      inputs: ['selectedIndex'],\n      outputs: ['selectFocusedIndex', 'indexFocused'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID's for each tab component */\n\n\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\n\nclass MatTabChangeEvent {} // Boilerplate for applying mixins to MatTabGroup.\n\n/** @docs-private */\n\n\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n\n\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n  constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** All of the tabs that belong to the group. */\n\n    this._tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n\n    this._indexToSelect = 0;\n    /** Index of the tab that was focused last. */\n\n    this._lastFocusedTabIndex = null;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n\n    this._tabBodyWrapperHeight = 0;\n    /** Subscription to tabs being added/removed. */\n\n    this._tabsSubscription = Subscription.EMPTY;\n    /** Subscription to changes in the tab labels. */\n\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._dynamicHeight = false;\n    this._selectedIndex = null;\n    /** Position of the tab header. */\n\n    this.headerPosition = 'above';\n    this._disablePagination = false;\n    this._preserveContent = false;\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n\n    this.selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n\n    this.focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n\n    this.animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n\n    this.selectedTabChange = new EventEmitter(true);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n    this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n    this.preserveContent = !!defaultConfig?.preserveContent;\n  }\n  /** Whether the tab group should grow to the size of the active tab. */\n\n\n  get dynamicHeight() {\n    return this._dynamicHeight;\n  }\n\n  set dynamicHeight(value) {\n    this._dynamicHeight = coerceBooleanProperty(value);\n  }\n  /** The index of the active tab. */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n\n\n  get animationDuration() {\n    return this._animationDuration;\n  }\n\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n  }\n  /**\n   * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n   * accessibility when the tab does not have focusable elements or if it has scrollable content.\n   * The `tabindex` will be removed automatically for inactive tabs.\n   * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n   */\n\n\n  get contentTabIndex() {\n    return this._contentTabIndex;\n  }\n\n  set contentTabIndex(value) {\n    this._contentTabIndex = coerceNumberProperty(value, null);\n  }\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n\n\n  get disablePagination() {\n    return this._disablePagination;\n  }\n\n  set disablePagination(value) {\n    this._disablePagination = coerceBooleanProperty(value);\n  }\n  /**\n   * By default tabs remove their content from the DOM while it's off-screen.\n   * Setting this to `true` will keep it in the DOM which will prevent elements\n   * like iframes and videos from reloading next time it comes back into the view.\n   */\n\n\n  get preserveContent() {\n    return this._preserveContent;\n  }\n\n  set preserveContent(value) {\n    this._preserveContent = coerceBooleanProperty(value);\n  }\n  /** Background color of the tab group. */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value) {\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n\n\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n\n\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect)); // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      } // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n\n\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect); // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._lastFocusedTabIndex = null;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n\n    this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n\n\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n\n\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        let selectedTab;\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            this._lastFocusedTabIndex = null;\n            selectedTab = tabs[i];\n            break;\n          }\n        } // If we haven't found an active tab and a tab exists at the selected index, it means\n        // that the active tab was swapped out. Since this won't be picked up by the rendering\n        // loop in `ngAfterContentChecked`, we need to sync it up manually.\n\n\n        if (!selectedTab && tabs[indexToSelect]) {\n          Promise.resolve().then(() => {\n            tabs[indexToSelect].isActive = true;\n            this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          });\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Listens to changes in all of the tabs. */\n\n\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n\n      this._tabs.notifyOnChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabs.destroy();\n\n    this._tabsSubscription.unsubscribe();\n\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n\n\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Recalculates the tab group's pagination dimensions.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n\n\n  updatePagination() {\n    if (this._tabHeader) {\n      this._tabHeader.updatePagination();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n\n\n  focusTab(index) {\n    const header = this._tabHeader;\n\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n\n  _focusChanged(index) {\n    this._lastFocusedTabIndex = index;\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n\n\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n\n\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n\n\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /** Returns a unique id for each tab content element */\n\n\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n\n\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n\n\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n\n\n  _handleClick(tab, tabHeader, index) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n\n\n  _getTabIndex(tab, index) {\n    if (tab.disabled) {\n      return null;\n    }\n\n    const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n    return index === targetIndex ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n\n\n  _tabFocusChanged(focusOrigin, index) {\n    // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n    // can cause the tab to be moved out from under the pointer, interrupting the\n    // click sequence (see #21898). We don't need to scroll the tab into view for\n    // such cases anyway, because it will be done when the tab becomes selected.\n    if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n\n}\n\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {\n  return new (t || _MatTabGroupBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabGroupBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabGroupBase,\n  inputs: {\n    dynamicHeight: \"dynamicHeight\",\n    selectedIndex: \"selectedIndex\",\n    headerPosition: \"headerPosition\",\n    animationDuration: \"animationDuration\",\n    contentTabIndex: \"contentTabIndex\",\n    disablePagination: \"disablePagination\",\n    preserveContent: \"preserveContent\",\n    backgroundColor: \"backgroundColor\"\n  },\n  outputs: {\n    selectedIndexChange: \"selectedIndexChange\",\n    focusChange: \"focusChange\",\n    animationDone: \"animationDone\",\n    selectedTabChange: \"selectedTabChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabGroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    dynamicHeight: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    contentTabIndex: [{\n      type: Input\n    }],\n    disablePagination: [{\n      type: Input\n    }],\n    preserveContent: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n\n\nclass MatTabGroup extends _MatTabGroupBase {\n  constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n\n}\n\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n  return new (t || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabGroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabGroup,\n  selectors: [[\"mat-tab-group\"]],\n  contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    }\n  },\n  viewQuery: function MatTabGroup_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(_c9, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-group\"],\n  hostVars: 4,\n  hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matTabGroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 7,\n  consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"ngClass\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"ngClass\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"ngClass\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\", \"ngIfElse\"], [\"tabTextLabel\", \"\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"ngClass\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\", \"_onCentered\", \"_onCentering\"]],\n  template: function MatTabGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n      i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n        return ctx._focusChanged($event);\n      })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n        return ctx.selectedIndex = $event;\n      });\n      i0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 5, 15, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 11, \"mat-tab-body\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    }\n  },\n  dependencies: [i1$2.NgClass, i1$2.NgForOf, i1$2.NgIf, i2.CdkPortalOutlet, i4.MatRipple, i7.CdkMonitorFocus, MatTabLabelWrapper, MatTabBody, MatTabHeader],\n  styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-tab-group',\n        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n      },\n      template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               [preserveContent]=\\\"preserveContent\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n      styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\n\n\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n    /** Theme color of the nav bar. */\n\n    this.color = 'primary';\n  }\n  /** Background color of the tab nav. */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /** Whether the ripple effect is disabled or not. */\n\n\n  get disableRipple() {\n    return this._disableRipple;\n  }\n\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  _itemSelected() {// noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n\n\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n\n        this._changeDetectorRef.markForCheck();\n\n        if (this.tabPanel) {\n          this.tabPanel._activeTabId = items[i].id;\n        }\n\n        return;\n      }\n    } // The ink bar should hide itself if no items are active.\n\n\n    this.selectedIndex = -1;\n\n    this._inkBar.hide();\n  }\n\n  _getRole() {\n    return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n  }\n\n}\n\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {\n  return new (t || _MatTabNavBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabNavBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabNavBase,\n  inputs: {\n    backgroundColor: \"backgroundColor\",\n    disableRipple: \"disableRipple\",\n    color: \"color\",\n    tabPanel: \"tabPanel\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabNavBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    tabPanel: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n\n\nclass MatTabNav extends _MatTabNavBase {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n}\n\nMatTabNav.ɵfac = function MatTabNav_Factory(t) {\n  return new (t || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabNav.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabNav,\n  selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n  contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabNav_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"],\n  hostVars: 11,\n  hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx._getRole());\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matTabNavBar\", \"matTabNav\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  attrs: _c10,\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 10,\n  consts: [[\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"tabListInner\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabNav_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabNav_Template_button_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabNav_Template_button_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabNav_Template_button_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7, 8);\n      i0.ɵɵprojection(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"mat-ink-bar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 9, 10);\n      i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_button_mousedown_11_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabNav_Template_button_click_11_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabNav_Template_button_touchend_11_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(13, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n    }\n  },\n  dependencies: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      inputs: ['color'],\n      host: {\n        '[attr.role]': '_getRole()',\n        'class': 'mat-tab-nav-bar mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})(); // Boilerplate for applying mixins to MatTabLink.\n\n\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {})));\n/** Base class with all of the `MatTabLink` functionality. */\n\n\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n  constructor(_tabNavBar,\n  /** @docs-private */\n  elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    /** Whether the tab link is active or not. */\n\n    this._isActive = false;\n    /** Unique id for the tab. */\n\n    this.id = `mat-tab-link-${nextUniqueId++}`;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /** Whether the link is active. */\n\n\n  get active() {\n    return this._isActive;\n  }\n\n  set active(value) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._isActive) {\n      this._isActive = newValue;\n\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n\n\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /** Focuses the tab link. */\n\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  _handleFocus() {\n    // Since we allow navigation through tabbing in the nav bar, we\n    // have to update the focused index whenever the link receives focus.\n    this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n  }\n\n  _handleKeydown(event) {\n    if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n      this.elementRef.nativeElement.click();\n    }\n  }\n\n  _getAriaControls() {\n    return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n  }\n\n  _getAriaSelected() {\n    if (this._tabNavBar.tabPanel) {\n      return this.active ? 'true' : 'false';\n    } else {\n      return this.elementRef.nativeElement.getAttribute('aria-selected');\n    }\n  }\n\n  _getAriaCurrent() {\n    return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n  }\n\n  _getRole() {\n    return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n  }\n\n  _getTabIndex() {\n    if (this._tabNavBar.tabPanel) {\n      return this._isActive && !this.disabled ? 0 : -1;\n    } else {\n      return this.tabIndex;\n    }\n  }\n\n}\n\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {\n  return new (t || _MatTabLinkBase)(i0.ɵɵdirectiveInject(_MatTabNavBase), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabLinkBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabLinkBase,\n  inputs: {\n    active: \"active\",\n    id: \"id\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabLinkBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: _MatTabNavBase\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    active: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n\n\nclass MatTabLink extends _MatTabLinkBase {\n  constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n\n}\n\nMatTabLink.ɵfac = function MatTabLink_Factory(t) {\n  return new (t || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabLink.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLink,\n  selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n  hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"],\n  hostVars: 11,\n  hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n        return ctx._handleFocus();\n      })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"matTabLink\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLink, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      inputs: ['disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-tab-link mat-focus-indicator',\n        '[attr.aria-controls]': '_getAriaControls()',\n        '[attr.aria-current]': '_getAriaCurrent()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.id]': 'id',\n        '[attr.tabIndex]': '_getTabIndex()',\n        '[attr.role]': '_getRole()',\n        '[class.mat-tab-disabled]': 'disabled',\n        '[class.mat-tab-label-active]': 'active',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatTabNav\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\n\n\nclass MatTabNavPanel {\n  constructor() {\n    /** Unique id for the tab panel. */\n    this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n  }\n\n}\n\nMatTabNavPanel.ɵfac = function MatTabNavPanel_Factory(t) {\n  return new (t || MatTabNavPanel)();\n};\n\nMatTabNavPanel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabNavPanel,\n  selectors: [[\"mat-tab-nav-panel\"]],\n  hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-tab-nav-panel\"],\n  hostVars: 2,\n  hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  },\n  exportAs: [\"matTabNavPanel\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTabNavPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNavPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-nav-panel',\n      exportAs: 'matTabNavPanel',\n      template: '<ng-content></ng-content>',\n      host: {\n        '[attr.aria-labelledby]': '_activeTabId',\n        '[attr.id]': 'id',\n        'class': 'mat-tab-nav-panel',\n        'role': 'tabpanel'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatTabsModule {}\n\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) {\n  return new (t || MatTabsModule)();\n};\n\nMatTabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatTabsModule\n});\nMatTabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n      // Don't export all components because some are only to be used internally.\n      exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabNavPanel, MatTabLink, MatTabContent],\n      declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabNavPanel, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };","map":{"version":3,"names":["i7","FocusKeyManager","A11yModule","i5","ObserversModule","i2","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalModule","i1$2","DOCUMENT","CommonModule","i0","InjectionToken","Directive","Inject","Optional","TemplateRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChild","ViewChild","Input","forwardRef","EventEmitter","Output","ContentChildren","QueryList","Attribute","NgModule","i4","mixinDisabled","mixinColor","mixinDisableRipple","mixinTabIndex","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","take","startWith","distinctUntilChanged","takeUntil","switchMap","skip","Subject","Subscription","fromEvent","of","merge","EMPTY","Observable","timer","i1","trigger","state","style","transition","animate","coerceBooleanProperty","coerceNumberProperty","i1$1","i3","normalizePassiveListenerOptions","hasModifierKey","SPACE","ENTER","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","onStable","pipe","subscribe","positions","inkBar","nativeElement","visibility","hide","ɵfac","ElementRef","NgZone","ɵdir","type","args","selector","host","undefined","decorators","MAT_TAB_CONTENT","MatTabContent","template","provide","useExisting","providers","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","templateRef","viewContainerRef","_closestTab","ViewContainerRef","_MatTabBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","textLabel","_contentPortal","_stateChanges","position","origin","isActive","templateLabel","_templateLabel","value","_setTemplateLabelInput","content","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","ɵcmp","inputs","changeDetection","Default","encapsulation","None","exportAs","read","static","ariaLabel","ariaLabelledby","labelClass","bodyClass","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_document","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","preserveContent","detach","unsubscribe","ComponentFactoryResolver","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","Directionality","ChangeDetectorRef","elementRef","animations","styles","_portalHost","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","_disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","runOutsideAngular","_stopInterval","disablePagination","selectedIndex","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","ngAfterContentInit","dirChange","resize","realign","updatePagination","_alignInkBarToSelectedTab","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","_itemsResized","run","Promise","resolve","then","Math","max","min","_getMaxScrollDistance","newFocusIndex","_setTabFocus","ResizeObserver","tabItems","observer","resizeObserver","forEach","item","observe","disconnect","ngAfterContentChecked","_tabLabelCount","length","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","focusIndex","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","index","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","isEnabled","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","maxScrollDistance","distance","ViewportRuler","Platform","_MatTabHeaderBase","viewportRuler","ngZone","platform","animationMode","_disableRipple","disableRipple","preventDefault","MatTabHeader","MatRipple","CdkObserveContent","outputs","descendants","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_tabs","_indexToSelect","_lastFocusedTabIndex","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","_preserveContent","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","selectedTab","i","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","focusTab","header","_focusChanged","map","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","_getTabIndex","targetIndex","_tabFocusChanged","focusOrigin","MatTabGroup","NgClass","NgForOf","NgIf","CdkMonitorFocus","nextUniqueId","_MatTabNavBase","color","updateActiveLink","items","active","tabPanel","_activeTabId","id","_getRole","getAttribute","MatTabNav","MatTabLink","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","_handleFocus","indexOf","click","_getAriaControls","_getAriaSelected","_getAriaCurrent","FocusMonitor","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabNavPanel","OnPush","MatTabsModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["/home/cpshibin/Documents/class/Anglar/Swiggy/Frontend/node_modules/@angular/material/fesm2020/tabs.mjs"],"sourcesContent":["import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i2 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i1$2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            const positions = this._inkBarPositioner(element);\n            const inkBar = this._elementRef.nativeElement;\n            inkBar.style.left = positions.left;\n            inkBar.style.width = positions.width;\n        });\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_MAT_INK_BAR_POSITIONER]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], labelClass: \"labelClass\", bodyClass: \"bodyClass\" }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB_GROUP]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], labelClass: [{\n                type: Input\n            }], bodyClass: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({\n            transform: 'translate3d(-100%, 0, 0)',\n            minHeight: '1px',\n            // Normally this is redundant since we detach the content from the DOM, but if the user\n            // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n            visibility: 'hidden',\n        })),\n        state('right', style({\n            transform: 'translate3d(100%, 0, 0)',\n            minHeight: '1px',\n            visibility: 'hidden',\n        })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            if (!this._host.preserveContent) {\n                this.detach();\n            }\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatTabBody)]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n        this.preserveContent = false;\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", preserveContent: \"preserveContent\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], preserveContent: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"], dependencies: [{ kind: \"directive\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        this._disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    get disablePagination() {\n        return this._disablePagination;\n    }\n    set disablePagination(value) {\n        this._disablePagination = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n        // can hold up tests that are in a background tab.\n        this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes, this._itemsResized())\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => {\n                Promise.resolve().then(() => {\n                    // Clamp the scroll distance, because it can change with the number of tabs.\n                    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n                    realign();\n                });\n            });\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n        if (typeof ResizeObserver !== 'function') {\n            return EMPTY;\n        }\n        return this._items.changes.pipe(startWith(this._items), switchMap((tabItems) => new Observable((observer) => this._ngZone.runOutsideAngular(() => {\n            const resizeObserver = new ResizeObserver(() => {\n                observer.next();\n            });\n            tabItems.forEach(item => {\n                resizeObserver.observe(item.elementRef.nativeElement);\n            });\n            return () => {\n                resizeObserver.disconnect();\n            };\n        }))), \n        // Skip the first emit since the resize observer emits when an item\n        // is observed for new items when the tab is already inserted\n        skip(1));\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"], dependencies: [{ kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { kind: \"directive\", type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Index of the tab that was focused last. */\n        this._lastFocusedTabIndex = null;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        this._disablePagination = false;\n        this._preserveContent = false;\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n        this.preserveContent = !!defaultConfig?.preserveContent;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    get disablePagination() {\n        return this._disablePagination;\n    }\n    set disablePagination(value) {\n        this._disablePagination = coerceBooleanProperty(value);\n    }\n    /**\n     * By default tabs remove their content from the DOM while it's off-screen.\n     * Setting this to `true` will keep it in the DOM which will prevent elements\n     * like iframes and videos from reloading next time it comes back into the view.\n     */\n    get preserveContent() {\n        return this._preserveContent;\n    }\n    set preserveContent(value) {\n        this._preserveContent = coerceBooleanProperty(value);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._lastFocusedTabIndex = null;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                let selectedTab;\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        this._lastFocusedTabIndex = null;\n                        selectedTab = tabs[i];\n                        break;\n                    }\n                }\n                // If we haven't found an active tab and a tab exists at the selected index, it means\n                // that the active tab was swapped out. Since this won't be picked up by the rendering\n                // loop in `ngAfterContentChecked`, we need to sync it up manually.\n                if (!selectedTab && tabs[indexToSelect]) {\n                    Promise.resolve().then(() => {\n                        tabs[indexToSelect].isActive = true;\n                        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                    });\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        if (this._tabHeader) {\n            this._tabHeader.updatePagination();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this._lastFocusedTabIndex = index;\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, index) {\n        if (tab.disabled) {\n            return null;\n        }\n        const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n        return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", preserveContent: \"preserveContent\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], preserveContent: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               [preserveContent]=\\\"preserveContent\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"], dependencies: [{ kind: \"directive\", type: i1$2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1$2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1$2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { kind: \"directive\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { kind: \"component\", type: MatTabBody, selector: \"mat-tab-body\" }, { kind: \"component\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               [preserveContent]=\\\"preserveContent\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                if (this.tabPanel) {\n                    this.tabPanel._activeTabId = items[i].id;\n                }\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n    _getRole() {\n        return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\", tabPanel: \"tabPanel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], tabPanel: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"attr.role\": \"_getRole()\", \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"], dependencies: [{ kind: \"directive\", type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { kind: \"directive\", type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        '[attr.role]': '_getRole()',\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar._mat-animation-noopable{transition:none !important;animation:none !important}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        /** Unique id for the tab. */\n        this.id = `mat-tab-link-${nextUniqueId++}`;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n        if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n            this.elementRef.nativeElement.click();\n        }\n    }\n    _getAriaControls() {\n        return this._tabNavBar.tabPanel\n            ? this._tabNavBar.tabPanel?.id\n            : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n        if (this._tabNavBar.tabPanel) {\n            return this.active ? 'true' : 'false';\n        }\n        else {\n            return this.elementRef.nativeElement.getAttribute('aria-selected');\n        }\n    }\n    _getAriaCurrent() {\n        return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n        return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n        if (this._tabNavBar.tabPanel) {\n            return this._isActive && !this.disabled ? 0 : -1;\n        }\n        else {\n            return this.tabIndex;\n        }\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatTabLinkBase, inputs: { active: \"active\", id: \"id\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { active: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-controls\": \"_getAriaControls()\", \"attr.aria-current\": \"_getAriaCurrent()\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.id\": \"id\", \"attr.tabIndex\": \"_getTabIndex()\", \"attr.role\": \"_getRole()\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-controls]': '_getAriaControls()',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.id]': 'id',\n                        '[attr.tabIndex]': '_getTabIndex()',\n                        '[attr.role]': '_getRole()',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n    constructor() {\n        /** Unique id for the tab panel. */\n        this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n}\nMatTabNavPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNavPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatTabNavPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTabNavPanel, selector: \"mat-tab-nav-panel\", inputs: { id: \"id\" }, host: { attributes: { \"role\": \"tabpanel\" }, properties: { \"attr.aria-labelledby\": \"_activeTabId\", \"attr.id\": \"id\" }, classAttribute: \"mat-tab-nav-panel\" }, exportAs: [\"matTabNavPanel\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabNavPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-tab-nav-panel',\n                    exportAs: 'matTabNavPanel',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        '[attr.aria-labelledby]': '_activeTabId',\n                        '[attr.id]': 'id',\n                        'class': 'mat-tab-nav-panel',\n                        'role': 'tabpanel',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}